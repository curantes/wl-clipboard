#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : wl-clipboard
Version  : 2.0.0
Release  : 1
URL      : https://github.com/bugaevc/wl-clipboard/archive/v2.0.0.tar.gz
Source0  : https://github.com/bugaevc/wl-clipboard/archive/v2.0.0.tar.gz
Summary  : No detailed summary available
Group    : Development/Tools
License  : GPL-3.0
Requires: wl-clipboard-bin = %{version}-%{release}
Requires: wl-clipboard-data = %{version}-%{release}
Requires: wl-clipboard-man = %{version}-%{release}
Requires: xdg-utils
BuildRequires : buildreq-meson
BuildRequires : pkgconfig(wayland-client)
BuildRequires : pkgconfig(wayland-protocols)
BuildRequires : pkgconfig(wayland-scanner)

%description
# wl-clipboard: Wayland clipboard utilities
This project implements two command-line Wayland clipboard utilities, `wl-copy`
and `wl-paste`, that let you easily copy data between the clipboard and Unix
pipes, sockets, files and so on.

%package bin
Summary: bin components for the wl-clipboard package.
Group: Binaries
Requires: wl-clipboard-data = %{version}-%{release}

%description bin
bin components for the wl-clipboard package.


%package data
Summary: data components for the wl-clipboard package.
Group: Data

%description data
data components for the wl-clipboard package.


%package man
Summary: man components for the wl-clipboard package.
Group: Default

%description man
man components for the wl-clipboard package.


%prep
%setup -q -n wl-clipboard-2.0.0
cd %{_builddir}/wl-clipboard-2.0.0

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1581804005
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FCFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=4 "
CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" LDFLAGS="$LDFLAGS" meson --libdir=lib64 --prefix=/usr --buildtype=plain   builddir
ninja -v -C builddir

%install
DESTDIR=%{buildroot} ninja -C builddir install

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/wl-copy
/usr/bin/wl-paste

%files data
%defattr(-,root,root,-)
/usr/share/bash-completion/completions/wl-copy
/usr/share/bash-completion/completions/wl-paste
/usr/share/zsh/site-functions/_wl-copy
/usr/share/zsh/site-functions/_wl-paste

%files man
%defattr(0644,root,root,0755)
/usr/share/man/man1/wl-clipboard.1
/usr/share/man/man1/wl-copy.1
/usr/share/man/man1/wl-paste.1
